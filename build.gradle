plugins {
    id 'io.franzbecker.gradle-lombok' version '3.1.0'
    id 'org.springframework.boot' version '2.2.0.M4'
    id 'groovy'
    id 'idea'
}

ext {
    set('springCloudVersion', "Hoxton.M1")
}

apply plugin: 'io.spring.dependency-management'

group = 'com.github.daggerok.eventsourcing'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation(platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"))
    implementation 'org.springframework.cloud:spring-cloud-stream'
    // implementation 'org.springframework.cloud:spring-cloud-stream-reactive'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.codehaus.groovy:groovy'
    implementation 'io.vavr:vavr:0.10.1'

    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation(platform('org.spockframework:spock-bom:1.3-groovy-2.5'))
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'org.spockframework:spock-spring'
}

test {
    // useJUnitPlatform() // comment this out to run spock specs!
    // see: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html
    testLogging {
        showExceptions = true
        showStandardStreams = true
        // set options for log level LIFECYCLE
        events 'passed', 'skipped', 'failed'
        // set options for log level DEBUG
        debug {
            events 'started', 'skipped', 'failed'
            exceptionFormat 'full'
        }
        // // remove standard output/error logging from --info builds
        // // by assigning only 'failed' and 'skipped' events
        // info.events = ['failed', 'skipped']
    }
}

bootJar {
    launchScript()
}

wrapper {
    gradleVersion = '5.5.1'
}

defaultTasks 'clean', 'build'
